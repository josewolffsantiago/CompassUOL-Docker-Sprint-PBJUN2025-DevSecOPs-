AWSTemplateFormatVersion: '2010-09-09'
Description: Por enquanto, criacao bem sucedido de RDS e VPC para funcionamento do WORDPRESS

Parameters:

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Jose_Wolff_PB

  AsgMaxSize:
    Type: Number
    Description: Maximum size and initial desired capacity of Auto Scaling Group
    Default: '2'

  VolumeName:
    Description: Nome Volume EFS
    Type: String
    MinLength: '1'
    Default: WP-EFS2a

  MountPoint:
    Description: Onde sera o EFS
    Type: String
    MinLength: '1'
    Default: /mnt/efs

  DatabaseUsername:
    Description: Usu√°rio do banco de dados
    Type: String
    Default: bn_wordpress

  DatabasePassword:
    Description: Senha do banco de dados
    Type: String
    NoEcho: true

  CostCenter:
    Type: String
    Description: TAG da empresa para funcionar EC2
    Default: Adicionar Aqui

Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: HVM64

  AWSRegionArch2AMI:
    us-east-2:
      HVM64: ami-0169aa51f6faf20d5
      HVMG2: NOT_SUPPORTED

Resources:

  WordpressVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.0.0.0/16
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Wordpress-VPC

  WordpressIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Wordpress-IGW

  WordpressIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref WordpressIGW
      VpcId: !Ref WordpressVPC

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  WordpressPublicSubnet02a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2a
      CidrBlock: 172.0.0.0/20
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-public02a-natgateway

  WordpressPublicSubnet02b:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2b
      CidrBlock: 172.0.16.0/20
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-public02b-natgateway

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref WordpressPublicSubnet02a
      Tags:
        - Key: Name
          Value: Wordpress-NAT-public-us-east-2

  WordpressRtbPublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-rtb-public

  PublicRouteInternetGateway:
    Type: AWS::EC2::Route
    DependsOn: WordpressIGWAttachment
    Properties:
      RouteTableId: !Ref WordpressRtbPublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref WordpressIGW

  WordpressRtbPrivate01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-rtb-private02a-ec2

  PrivateRouteNatGateway01:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref WordpressRtbPrivate01
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  WordpressRtbPrivate02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-rtb-private02b-ec2

  PrivateRouteNatGateway02:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref WordpressRtbPrivate02
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  WordpressRtbPrivate03:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-rtb-private02a-efs

  PrivateRouteNatGateway03:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref WordpressRtbPrivate03
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  WordpressRtbPrivate04:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-rtb-private02b-efs

  PrivateRouteNatGateway04:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref WordpressRtbPrivate04
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  WordpressPrivateSubnet02aEC21:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2a
      CidrBlock: 172.0.128.0/20
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-private02a-ec2-1

  WordpressPrivateSubnet02bEC22:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2b
      CidrBlock: 172.0.144.0/20
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-private02b-ec2-2

  WordpressPrivateSubnet02aEFSMT2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2a
      CidrBlock: 172.0.160.0/20
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-private02a-efs-mt2

  WordpressPrivateSubnet02bEFSMT2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2b
      CidrBlock: 172.0.176.0/20
      VpcId: !Ref WordpressVPC
      Tags:
        - Key: Name
          Value: Wordpress-private02b-efs-mt2

  WordpressPublicSubnet02aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WordpressPublicSubnet02a
      RouteTableId: !Ref WordpressRtbPublic

  WordpressPublicSubnet02bRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WordpressPublicSubnet02b
      RouteTableId: !Ref WordpressRtbPublic

  WordpressPrivateSubnet02aEC21RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WordpressPrivateSubnet02aEC21
      RouteTableId: !Ref WordpressRtbPrivate01

  WordpressPrivateSubnet02bEC22RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WordpressPrivateSubnet02bEC22
      RouteTableId: !Ref WordpressRtbPrivate02

  WordpressPrivateSubnet02aEFSMT2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WordpressPrivateSubnet02aEFSMT2
      RouteTableId: !Ref WordpressRtbPrivate03

  WordpressPrivateSubnet02bEFSMT2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WordpressPrivateSubnet02bEFSMT2
      RouteTableId: !Ref WordpressRtbPrivate04

  # Grupo de Seguran?a para RDS (Testar para encontrar certeza que ir? dar certo)
  WordpressDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ativar RDS apenas para Instancia EC2
      GroupName: WordpressDBSecurityGroup
      VpcId: !Ref WordpressVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 172.0.0.0/8
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 172.0.0.0/8

  #Grupo de seguranca para EC2

  WordpressEC2SGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS Acess, SSH for Bastion and Internet (feita por jgustavo)
      GroupName: WordpressEC2SGroup
      VpcId: !Ref WordpressVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 172.0.0.0/8
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          DestinationSecurityGroupId: !Ref WordpressDBSecurityGroup
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          DestinationSecurityGroupId: !Ref BastionSGroup
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          DestinationSecurityGroupId: !Ref MountTargetEFSSG
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          DestinationSecurityGroupId: !Ref MountTargetEFSSG

  #Security Group para BASTION

  BastionSGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ativar SSH access para Sbnet PRIVADA
      GroupName: BastionSGroup
      VpcId: !Ref WordpressVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0

  # DB Subnet Group para a instancia RDS

  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: Wordpress-private02b-efs-mt2-dbsubnett-vpc-0f80a82dbbd48cfa9
      DBSubnetGroupDescription: Subnet privada para RDS com associacao exclusiva ao EFS
      SubnetIds:
        - !Ref WordpressPrivateSubnet02aEC21
        - !Ref WordpressPrivateSubnet02bEC22

  # RDS MySQL - Trocado o subnet group e o SG

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: db-wordpress
      DBInstanceClass: db.t3.micro
      Engine: mysql
      EngineVersion: 8.0.43
      MasterUsername: !Ref DatabaseUsername
      MasterUserPassword: !Ref DatabasePassword
      DBSubnetGroupName: !Ref RDSSubnetGroup
      VPCSecurityGroups:
        - !Ref WordpressDBSecurityGroup
      DBName: wordpress
      Port: 3306
      AllocatedStorage: 20
      MaxAllocatedStorage: 50
      StorageType: gp2
      AvailabilityZone: us-east-2b
      BackupRetentionPeriod: 1
      DBParameterGroupName: default.mysql8.0
      OptionGroupName: default:mysql-8-0
      NetworkType: IPV4
      CACertificateIdentifier: rds-ca-rsa2048-g1

  RDSCPUUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: RDS-CPUUtilization
      Namespace: AWS/RDS
      MetricName: CPUUtilization
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: db-wordpress
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold

  #Template para EFS - TESTE

  #SecurityGroup para a montagem EFS

  MountTargetEFSSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref WordpressVPC
      GroupDescription: Grupo de seguranca para o EFS
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 172.0.0.0/8
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          CidrIp: 172.0.0.0/8

  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      PerformanceMode: generalPurpose
      FileSystemTags:
        - Key: Name
          Value: !Ref VolumeName

  MountTargetSubnetA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref WordpressPrivateSubnet02aEFSMT2
      SecurityGroups:
        - !Ref MountTargetEFSSG

  MountTargetSubnetB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref WordpressPrivateSubnet02bEFSMT2
      SecurityGroups:
        - !Ref MountTargetEFSSG

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref AWS::Region
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref WordpressEC2SGroup
      UserData: !Base64 |
        #!/bin/bash

        echo "FileSystemId=$(aws efs describe-file-systems --query "FileSystems[0].FileSystemId" --output text)" >> /etc/environment

        echo "MYSQL_HOST=$(aws rds describe-db-instances --query "DBInstances[0].Endpoint.Address" --output text)" >> /etc/environment

        echo "MountPoint=/mnt/efs" >> /etc/environment

        source /etc/environment

        sudo su

        dnf install -y aws-cfn-bootstrap
        /opt/aws/bin/cfn-signal -e $? --stack WP-Stack --resource myASG --region us-east-2

        dnf install -y mariadb105

        dnf install -y docker

        dnf install -y aws-cli

        dnf install -y nfs-utils

        mkdir -p /mnt/efs

        echo -e '#!/bin/bash\nMountPoint=/mnt/efs\nFileSystemId=$(aws efs describe-file-systems --query "FileSystems[0].FileSystemId" --output text)\nMYSQL_HOST=$(aws rds describe-db-instances --query "DBInstances[0].Endpoint.Address" --output text)\nexport MountPoint\nexport FileSystemId\nexport MYSQL_HOST' >> /etc/profile.d/variavel.sh

        chmod +x /etc/profile.d/variavel.sh

        sh /etc/profile.d/variavel.sh

        echo -e '#!/bin/bash
        set -a
        source /etc/environment
        set +a
        mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport "$FileSystemId.efs.us-east-2.amazonaws.com:/" "$MountPoint"' > /home/ec2-user/mount.sh

        chmod +x /home/ec2-user/mount.sh

        sh /home/ec2-user/mount.sh

        curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose

        chmod +x /usr/local/bin/docker-compose

        sytemctl enable docker

        systemctl start docker

        aws s3 cp s3://docker-wordpress-files/.env /mnt/efs

        aws s3 cp s3://docker-wordpress-files/docker-compose.yml /mnt/efs

        cd /mnt/efs

        source /etc/environment

        echo "MYSQL_HOST=$MYSQL_HOST" >> /mnt/efs/.env

        docker-compose up -d

      IamInstanceProfile: IAM-Wordpress-ACCESS

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
      - MountTargetSubnetA
      - MountTargetSubnetB
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
        Count: !Ref AsgMaxSize
    Properties:
      VPCZoneIdentifier:
        - !Ref WordpressPrivateSubnet02aEC21
        - !Ref WordpressPrivateSubnet02bEC22
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: '1'
      MaxSize: !Ref AsgMaxSize
      DesiredCapacity: !Ref AsgMaxSize
      Tags:
        - Key: Name
          Value: AS-EC2
          PropagateAtLaunch: true
        - Key: CostCenter
          Value: !Ref CostCenter
          PropagateAtLaunch: true
        - Key: Project
          Value: PB - JUN 2025
          PropagateAtLaunch: true

Outputs:

  EFSMountTargetA:
    Value: !Ref MountTargetSubnetA
  EFSMountTargetB:
    Value: !Ref MountTargetSubnetB

  FileSystemID:
    Description: File system ID
    Value: !Ref FileSystem

  RDSInstanceEndpoint:
    Description: Endpoint da instancia RDS
    Value: !GetAtt RDSInstance.Endpoint.Address

  DBUsername:
    Value: !Ref DatabaseUsername
    Export:
      Name: DBUsername

  DBPassword:
    Value: !Ref DatabasePassword
    Export:
      Name: DBPassword

  CostCenter:
    Value: !Ref CostCenter
    Export:
      Name: CostCenter